#!/usr/bin/env node

(function() {
  "use strict";

  function print_errors(errors) {
    for (var i = 0; i < doc.errors.length; ++i) {
      var error = errors[i];
      console.log(error.type + ": " + error.message);
    }
  }

  var path = require('path'),
    stdio = require('stdio'),
    options = stdio.getopt({
    'format': {key: 'f', args: 1, description: 'Output format, valid formats are html and json.'},
    'index': {key: 'x', args: 0, description: 'Output generated index instead of document.'},
  });


  if (options.args && options.args.length > 0) {

    var fs = require('fs'),
      gjut = require('../lib/main.js'),
      filename = options.args[0],
      basedir = path.dirname(path.resolve(filename));

    if (!options.format) {
      options.format = 'html';
    }
    var doc = gjut.compile(filename, basedir);
    
    if (doc.errors.length > 0) {
      print_errors(doc.errors);
      process.exit(-1);
    }
    if (options.index) {
      console.log(doc.index);
      process.exit(0);
    }


    if (options.format === 'html') {
      gjut.render_html(doc, process.stdout);
    } else if (options.format === 'json') {
      gjut.render_json(doc, process.stdout);
    } else {
      console.log('error: Only formats html and json are accepted, unexpected: '+ options.format);
      process.exit(-1);
    }
  } else {
    console.log("Usage: node gjutc [options] <input-file>");
    console.log("Options:")
    console.log("\t-f, --format=<format>\tOutput format, [html|json].");
    console.log("\t-x, --index          \tOutput generated index instead of document.");

  }
}());
